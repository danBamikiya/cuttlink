version: '3.8'

services:
  web:
    build:
      context: web
      target: ui-dev
    hostname: web
    ports:
      - '4200:4200'
    networks:
      - public
    depends_on:
      - server
    labels:
      cuttlink.description: 'Web Client'
    volumes:
      - ./web/:/app
      - webnodemodules:/app/node_modules
    container_name: cuttlink_web

  server:
    build:
      context: server
      target: server-dev
    hostname: server
    ports:
      - '3000:3000'
    networks:
      - public
    depends_on:
      - database
      - cacher
    labels:
      cuttlink.description: 'NodeJS Server'
    volumes:
      - ./server/:/app
      - servernodemodules:/app/node_modules
    environment:
      WAIT_HOSTS: pgdb:5432, pgadmin:80
      WAIT_LOGGER_LEVEL: debug
    container_name: cuttlink_server

  server-proxy:
    build:
      context: server
      dockerfile: nginx/Dockerfile
    hostname: server-proxy
    ports:
      - '8080:8080'
    networks:
      - public
    depends_on:
      - server
    labels:
      cuttlink.description: 'NGINX Proxy for Cuttlink server'
    volumes:
      - ./server/nginx/nginx.conf:/etc/nginx/nginx.conf
    container_name: cuttlink_server_proxy

  cacher:
    build:
      context: redis
    hostname: cacher
    ports:
      - '6379:6379'
    networks:
      - public
    labels:
      cuttlink.description: 'Redis Cache'
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redisdata:/data
    container_name: cache

  database:
    image: postgres:13-alpine
    hostname: pgdb
    ports:
      - '5432:5432'
    networks:
      - public
      - database
    labels:
      cuttlink.description: 'Postgres Database'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    env_file:
      - .env
    container_name: pg_database

  database-admin:
    image: dpage/pgadmin4
    hostname: pgadmin
    ports:
      - '5050:80'
    networks:
      - database
    depends_on:
      - database
    labels:
      cuttlink.description: 'Adminer Database'
    volumes:
      - postgresadmin:/var/lib/pgadmin
    env_file:
      - .env
  container_name: pg_database_admin

networks:
  public:
    driver: bridge
  database:
    driver: bridge

volumes:
  servernodemodules: {}
  webnodemodules: {}
  redisdata: {}
  postgresdata: {}
  postgresadmin: {}
