# auto detects a good number of processes to run
worker_processes auto;

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000; # 1024
    # tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    # what file types to serve
    include         /etc/nginx/mime.types;

    # serve unspecified file type as binary file
    # causing the browser to download it rather than display it
    default_type    application/octet-stream;

    # sets the path, format and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $upstream_addr '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    server {
        # listen on port 80
        listen 80;

        # enable compression
        gzip on;
        gzip_static on;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_proxied  any;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        # where the files to be served are
        root /usr/share/nginx/html;
        # what file to serve as index
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fallback to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
            add_header Vary Accept-Encoding;
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1M;
            add_header Cache-Control "public";
            add_header Vary Accept-Encoding;
        }

        # any route containing a file extension
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

        # reverse proxy any request to '/api' path to the server
        location /api {
            proxy_pass "http://server-proxy:8080/";
        }
    }
}